


SET(CXX_FILES
createLandmarks.cxx
fiberprocessing.cxx
)

SET(H_FILES
dtitypes.h
argio.h
fiberprocessing.h
)

find_package(SlicerExecutionModel REQUIRED)
include(${SlicerExecutionModel_USE_FILE})

find_package(ITK REQUIRED)
include(${ITK_USE_FILE})

find_package(VTK REQUIRED)
include(${VTK_USE_FILE})


SEMMacroBuildCLI(
    NAME createLandmarks
    ADDITIONAL_SRCS ${CXX_FILES} ${H_FILES}
    TARGET_LIBRARIES ${ITK_LIBRARIES} ${VTK_LIBRARIES}
    ${STATIC}
    INCLUDE_DIRECTORIES ${DTIFiberTractStat_SOURCE_DIR}
    ARCHIVE_OUTPUT_DIRECTORY ${ARCHIVE_DESTINATION}
    LIBRARY_OUTPUT_DIRECTORY ${LIBRARY_DESTINATION}
    RUNTIME_OUTPUT_DIRECTORY ${RUNTIME_DESTINATION}
    INSTALL_ARCHIVE_DESTINATION ${INSTALL_ARCHIVE_DESTINATION}
    INSTALL_LIBRARY_DESTINATION ${INSTALL_LIBRARY_DESTINATION}
    INSTALL_RUNTIME_DESTINATION ${INSTALL_RUNTIME_DESTINATION}
    )

target_compile_options(createLandmarks PRIVATE "-Wall")

file(GLOB LIBRARY_HEADERS ${CMAKE_CURRENT_SOURCE_DIR}/*.txx ${CMAKE_CURRENT_SOURCE_DIR}/*.hxx ${CMAKE_CURRENT_SOURCE_DIR}/*.h)

set_target_properties(createLandmarks PROPERTIES
  PUBLIC_HEADER "${LIBRARY_HEADERS}"
  )

install( TARGETS createLandmarks 
  EXPORT TraficTargets
  RUNTIME DESTINATION ${INSTALL_RUNTIME_DESTINATION} 
  PUBLIC_HEADER DESTINATION include
  )
# Add all targets to the build-tree export set

set_property(GLOBAL APPEND PROPERTY Trafic_LIBRARIES createLandmarks)